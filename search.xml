<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vueRouter源码.md</title>
      <link href="/2023/02/19/vueRouter%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E5%8F%8A%E5%AE%9E%E7%8E%B0/"/>
      <url>/2023/02/19/vueRouter%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E5%8F%8A%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="vue2-安装-vue-router"><a href="#vue2-安装-vue-router" class="headerlink" title="vue2 安装 vue-router"></a>vue2 安装 vue-router</h2><ol><li>npm i vue-router@3</li><li>编写 router 文件<a href="#router.js%E5%86%85%E5%AE%B9">router.js 文件内容</a></li><li>main.js 导入 router.js<a href="#main.js%E5%86%85%E5%AE%B9">main.js</a></li></ol><h5 id="router-js-内容"><a href="#router-js-内容" class="headerlink" title="router.js 内容"></a>router.js 内容</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import VueRouter from &quot;vue-router&quot; import Vue from &quot;vue&quot; Vue.use(VueRouter)</span><br><span class="line">const routes = [ &#123; path: &quot;/foo&quot;, component: Foo &#125;, &#123; path: &quot;/bar&quot;, component:</span><br><span class="line">Bar &#125;, ] export default new VueRouter(&#123; routes, &#125;)</span><br></pre></td></tr></table></figure><h5 id="main-js-内容"><a href="#main-js-内容" class="headerlink" title="main.js 内容"></a>main.js 内容</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import router from &quot;./router&quot; new Vue(&#123; router, render: (h) =&gt; h(App),</span><br><span class="line">&#125;).$mount(&quot;#app&quot;)</span><br></pre></td></tr></table></figure><h2 id="router-使用步骤"><a href="#router-使用步骤" class="headerlink" title="router 使用步骤"></a>router 使用步骤</h2><ol><li>导入 router 插件并使用 use 调用 ，注册了两个全局组件 <code>router-link</code> 、<code>router-view</code></li><li>export new router 实例</li><li>在 main.js 中导入并在 vue 使用，vue 选项中</li><li>页面使用 router-view</li></ol><h2 id="router-作用"><a href="#router-作用" class="headerlink" title="router 作用"></a>router 作用</h2><ul><li>spa 页面：不刷新更新数据 已知方式 <code>hash </code>方式 <code>history API</code>方式</li><li>根据对应 url 显示对应页面内容 数据响应式 已知方式 roter-view</li></ul><h1 id="实现-vueRouter"><a href="#实现-vueRouter" class="headerlink" title="实现 vueRouter"></a>实现 vueRouter</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>router 在 use 时干了什么事情？</li><li>router-view 如何监听页面变化？刷新页面？</li><li>如何监听 url 变化？</li><li>如何实现 routerlink、routerview？</li><li>嵌套路由实现</li></ol><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><blockquote><p>编写组件过程中越接近底层 js，兼容性越强</p></blockquote><ul><li><p>问题一</p><ul><li>在使用插件中(use)，将 vue 给 router。必须要有 install 构造函数，便于扩展。</li></ul></li><li><p>问题二</p><ul><li>页面内容使用 vue 中默认插槽<code>this.$slots.default</code> 函数，重新渲染<code>render</code>函数</li><li>实现路由地址与映射关系表，实现动态寻找组件，参考<a href="#%E5%8A%A8%E6%80%81routerView-%3E%E5%AE%9E%E7%8E%B0%E8%B7%AF%E7%94%B1%E5%9C%B0%E5%9D%80%E4%B8%8E%E9%A1%B5%E9%9D%A2%E7%9A%84%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB">动态 routerView-&gt;实现路由地址与页面的映射关系</a></li></ul></li><li><p>问题三</p><ul><li>使用 window.addEventListener 函数监听<code>hashchange</code>，<code>window.location.hash</code>中截取对应路由名称</li></ul></li><li><p>问题四</p><ul><li>router-link<ul><li>插件过程中实现一个 vue 插件 Vue.component 实现一个 routerlink，使用 a 标签在其中编写函数<code>render</code>函数，参考[vue2 官方文档](<a href="https://v2.cn.vuejs.org/v2/guide/render-function.html">渲染函数 &amp; JSX — Vue.js (vuejs.org)</a>)。</li></ul></li><li>router-view<ul><li>与 link 类似，但是这边实现的是 div 或者是组件。</li><li>在组件映射 json 中获取到组件地址，根据 url 动态匹配对应页面，取出后将组件<code>component</code>找到对应关系</li></ul></li></ul></li><li><p>问题五</p><ul><li>roter-view 在第几层 需要查找到第几层 routerView</li></ul><h3 id="动态-routerView-gt-实现路由地址与页面的映射关系"><a href="#动态-routerView-gt-实现路由地址与页面的映射关系" class="headerlink" title="动态 routerView-&gt;实现路由地址与页面的映射关系"></a>动态 routerView-&gt;实现路由地址与页面的映射关系</h3><ol><li>install 中获取路由关系映射 json，获取根实例使用 vue 组件中$options</li><li>监听 hashchange，响应式数据。定义响应式数据<code>Vue.util.definReactive</code>函数:给指定对象定义响应式属性</li></ol></li></ul><h3 id="简单实现源码"><a href="#简单实现源码" class="headerlink" title="简单实现源码"></a>简单实现源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">let</span> <span class="title class_">Vue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VueRouter</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="comment">// * 二、 给予router的映射表</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$options</span> = options</span><br><span class="line"></span><br><span class="line">    <span class="comment">//* 四、响应式current</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 思路</span></span><br><span class="line"><span class="comment">     * vue.set(必须为响应式对象)</span></span><br><span class="line"><span class="comment">     * Object.defineProperty 响应式拦截 要有依赖关系</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 给指定对象定义响应式属性</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property">util</span>.<span class="title function_">defineReactive</span>(</span><br><span class="line">      <span class="variable language_">this</span>,</span><br><span class="line">      <span class="string">&quot;current&quot;</span>,</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">slice</span>(<span class="number">1</span>) || <span class="string">&quot;/&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment">//* 三、需要将地址上的值拿出来对比</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">current</span> = <span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="comment">// 监听hashchange 保存当前地址</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;hashchange&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// #/xxxx =&gt;/xx</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">current</span> = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">slice</span>(<span class="number">1</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 1.静态类 属于类本身的原型链不属于内部构造函数的prototype</span></span><br><span class="line"><span class="comment">   * 2.静态类 通过类本身调用,不得通过new调用</span></span><br><span class="line"><span class="comment">   * 3.另一种实现方式 VueRouter.install = ()=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">   * */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">install</span>(<span class="params">_vue</span>) &#123;</span><br><span class="line">    <span class="title class_">Vue</span> = _vue</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  vue实例还没有出现所以需要混入，在组件创建时在进行挂载$router</span></span><br><span class="line"><span class="comment">     *  需要注册一个$router给予每个组件使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">mixin</span>(&#123;</span><br><span class="line">      <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * * 一、</span></span><br><span class="line"><span class="comment">         * 1. vue根实例中一定包含router 在main newVue中添加了router选项</span></span><br><span class="line"><span class="comment">         * 2. this.$options vue选项</span></span><br><span class="line"><span class="comment">         * 3. 在组件加载时赋值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$options</span>.<span class="property">router</span>) &#123;</span><br><span class="line">          <span class="comment">// 所有组件会继承原型上的$router所以组件中会包含$router</span></span><br><span class="line">          <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$router</span> = <span class="variable language_">this</span>.<span class="property">$options</span>.<span class="property">router</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 实现两个组件注入</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;router-link&quot;</span>, &#123;</span><br><span class="line">      <span class="comment">// 传参</span></span><br><span class="line">      <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="attr">to</span>: &#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">          <span class="attr">require</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 1.当前vue-runtime.js 不包含编译器 无法使用template</span></span><br><span class="line"><span class="comment">       * 2. h构建虚拟节点 v-node</span></span><br><span class="line"><span class="comment">       * */</span></span><br><span class="line">      <span class="title function_">render</span>(<span class="params">h</span>) &#123;</span><br><span class="line">        <span class="comment">// 动态获取数据</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">h</span>(</span><br><span class="line">          <span class="string">&quot;a&quot;</span>,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">attrs</span>: &#123;</span><br><span class="line">              <span class="comment">// to需要从props传过来 属性值</span></span><br><span class="line">              <span class="attr">href</span>: <span class="string">`#<span class="subst">$&#123;<span class="variable language_">this</span>.to&#125;</span>`</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$slots</span>.<span class="property">default</span></span><br><span class="line">        )</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  ^ 任务： 拿到动态配置的组件实现动态变化</span></span><br><span class="line"><span class="comment">     *  * 在组件中获取路由映射关系(一、二)</span></span><br><span class="line"><span class="comment">     *  * 获取地址中的路由(三)</span></span><br><span class="line"><span class="comment">     *  * 当地址发生变化时 动态渲染组件(四)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;router-view&quot;</span>, &#123;</span><br><span class="line">      <span class="title function_">render</span>(<span class="params">h</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> com =</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="property">$options</span>.<span class="property">routes</span>.<span class="title function_">find</span>(</span><br><span class="line">            <span class="function">(<span class="params">route</span>) =&gt;</span> route.<span class="property">path</span> == <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="property">current</span></span><br><span class="line">          )?.<span class="property">component</span> ?? <span class="literal">null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">h</span>(com)</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">VueRouter</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编译器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译器 </tag>
            
            <tag> 开发工具 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniApp原生安卓定位</title>
      <link href="/2022/12/13/uniApp%E5%8E%9F%E7%94%9F%E5%AE%89%E5%8D%93%E5%AE%9A%E4%BD%8D/"/>
      <url>/2022/12/13/uniApp%E5%8E%9F%E7%94%9F%E5%AE%89%E5%8D%93%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因业务需求研究了下，如何使用 uniapp 获取当前位置定位问题。</p><p><strong>编译器：HBuilder X 3.5.3</strong>，此方法只适用<strong>没有安卓环境没有 java 环境的应用</strong>，话不多说直接开始。</p><h1 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h1><h2 id="配置-manifest-json"><a href="#配置-manifest-json" class="headerlink" title="配置 manifest.json"></a>配置 manifest.json</h2><blockquote><p><a href="https://uniapp.dcloud.net.cn/tutorial/app-geolocation.html#">官网配置</a></p></blockquote><h3 id="APP-模块配置"><a href="#APP-模块配置" class="headerlink" title="APP 模块配置"></a>APP 模块配置</h3><p>文件<code>manifest.json</code>中 App 模块配置将<code>Geolocation(定位)功能</code>打开</p><p>内有三个选项</p><ol><li>系统定位</li><li>高德地图定位</li><li>百度地图定位</li></ol><p>推荐使用<code>高德地图定位</code>（因为百度的我没有尝试 😋），需要配置地图 key，后续会给出解答。</p><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h927ftvzlvj213f0qsgz1.jpg" alt="uniapp设置截图"></p><h3 id="APP-权限配置"><a href="#APP-权限配置" class="headerlink" title="APP 权限配置"></a>APP 权限配置</h3><p><strong>使用高德定位需要将以下权限再配置中勾选上</strong></p><ol><li>android.permission.ACCESS_COARSE_LOCATION</li><li>android.permission.ACCESS_FINE_LOCATION</li><li>android.permission.ACCESS_NETWORK_STATE</li><li>android.permission.ACCESS_WIFI_STATE</li><li>android.permission.CHANGE_WIFI_STATE</li><li>android.permission.INTERNET</li><li>android.permission.READ_PHONE_STATE</li><li>android.permission.WRITE_EXTERNAL_STORAGE</li><li>android.permission.ACCESS_LOCATION_EXTRA_COMMANDS</li><li>android.permission.BLUETOOTH</li><li>android.permission.BLUETOOTH_ADMIN</li></ol><p>使用百度定位官网也有配置<a href="https://uniapp.dcloud.net.cn/tutorial/app-permission-android.html#">官网定位权限</a></p><h2 id="配置安卓证书"><a href="#配置安卓证书" class="headerlink" title="配置安卓证书"></a>配置安卓证书</h2><blockquote><p>需要配置安卓证书，如果已经配置可以跳过该步骤。</p></blockquote><ol><li>进入<a href="https://dev.dcloud.net.cn/pages/common/login">uniApp开发者后台</a>，登录账号</li><li>点击应用名称，进入配置页面</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h927vud4vvj21h60ggdhb.jpg" alt="后台开发者截图"></p><ol start="3"><li>选择 Android 云端证书，创建证书需要等一会，生成之后，后面会用到里面证书内<code>SHA1</code>这个字段</li></ol><p><img src="C:\Users\wanJ\AppData\Roaming\Typora\typora-user-images\image-20221213153336297.png" alt="后台开发者截图1"></p><h2 id="配置高德地图-key"><a href="#配置高德地图-key" class="headerlink" title="配置高德地图 key"></a>配置高德地图 key</h2><ol><li>进入<a href="https://console.amap.com/">高德开放平台</a>，登录账号，点击<code>控制台</code></li><li>菜单选择<code>应用管理</code>下<code>我的应用</code>，创建新应用，填入信息</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h9284r63s3j21hm0f5js0.jpg" alt="高德开放平台1"></p><ol start="3"><li>创建的应用中点击<code>添加</code>，填入信息。</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h92a81k8wjj21gu0orgtg.jpg" alt="高德开放平台2"></p><ol start="4"><li>其中<strong>SHA1</strong>从 uniApp 云端证书中获取复制过来就行，<strong>PackageName</strong>从 HbHBuilder 中<code>发行</code>菜单下<code>云打包</code>中 android 包名复制过来</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h92avb1mlxj21gn0okwkv.jpg" alt="dClo"></p><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h92ay7hiroj20o90ozag4.jpg" alt="dClo2"></p><ol start="5"><li>配置完成后，补充到<code>manifest.json</code>文件内粘贴进去<a href="%E9%85%8D%E7%BD%AEmanifest.json">查看补充位置</a></li></ol><h2 id="打包自定义基座"><a href="#打包自定义基座" class="headerlink" title="打包自定义基座"></a>打包自定义基座</h2><p><a href="https://uniapp.dcloud.net.cn/tutorial/run/run-app.html#customplayground">官网自定义基座解释</a></p><ol><li><strong>HBuilder X</strong>中运行–&gt;云打包</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h92bq2uicsj20be0jldm0.jpg" alt="hbuilderx1"></p><ol start="2"><li>选择打自定义基座调,传统打包</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h92bsskrybj20o90ozgrw.jpg" alt="HbuilderX1"></p><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><ol><li>创建 location.js，代码如下</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">locationPermissions</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">//#ifdef APP-PLUS</span></span><br><span class="line">  <span class="keyword">const</span> system = uni.<span class="title function_">getSystemInfoSync</span>(); <span class="comment">//获取系统信息</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (system.<span class="property">platform</span> == <span class="string">&#x27;android&#x27;</span> || system.<span class="property">platform</span> == <span class="string">&#x27;Android&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> context = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.content.Context&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> locationManager = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.location.LocationManager&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> main = plus.<span class="property">android</span>.<span class="title function_">runtimeMainActivity</span>();</span><br><span class="line">    <span class="keyword">const</span> mainSvr = main.<span class="title function_">getSystemService</span>(context.<span class="property">LOCATION_SERVICE</span>);</span><br><span class="line">    <span class="keyword">const</span> gpsProvider = mainSvr.<span class="title function_">isProviderEnabled</span>(locationManager.<span class="property">GPS_PROVIDER</span>); <span class="comment">//检查是否开启了GPS</span></span><br><span class="line">    <span class="keyword">if</span> (!gpsProvider) &#123;</span><br><span class="line">      uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&#x27;请打开手机定位服务权限&#x27;</span>,</span><br><span class="line">        <span class="attr">showCancel</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> <span class="title class_">Intent</span> = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.content.Intent&#x27;</span>);</span><br><span class="line">          <span class="keyword">const</span> <span class="title class_">Settings</span> = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.provider.Settings&#x27;</span>);</span><br><span class="line">          <span class="keyword">const</span> new_Intent = <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="title class_">Settings</span>.<span class="property">ACTION_LOCATION_SOURCE_SETTINGS</span>);</span><br><span class="line">          main.<span class="title function_">startActivity</span>(new_Intent);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    uni.<span class="title function_">getLocation</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//#endif</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getLocationApp</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  uni.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;定位中...&#x27;</span>,</span><br><span class="line">    <span class="attr">mask</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    uni.<span class="title function_">getLocation</span>(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;gcj02&#x27;</span>,</span><br><span class="line">      <span class="attr">altitude</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">geocode</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">isHighAccuracy</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;定位结果：&#x27; + JSON.stringify(res));</span></span><br><span class="line">        <span class="keyword">const</span> addressList = res.<span class="property">address</span>;</span><br><span class="line">        <span class="keyword">const</span> address = <span class="string">`<span class="subst">$&#123;addressList.province&#125;</span>-<span class="subst">$&#123;addressList.city&#125;</span>-<span class="subst">$&#123;addressList.district&#125;</span>-<span class="subst">$&#123;addressList.street&#125;</span>-<span class="subst">$&#123;addressList.streetNum&#125;</span>`</span>;</span><br><span class="line">        <span class="keyword">const</span> location = &#123;</span><br><span class="line">          <span class="attr">longitude</span>: res.<span class="property">longitude</span>,</span><br><span class="line">          <span class="attr">latitude</span>: res.<span class="property">latitude</span>,</span><br><span class="line">          address,</span><br><span class="line">          <span class="attr">type</span>: res.<span class="property">type</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        uni.<span class="title function_">hideLoading</span>();</span><br><span class="line">        <span class="title function_">resolve</span>(location);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err.<span class="property">errCode</span> == <span class="number">3</span>) &#123;</span><br><span class="line">          uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">            <span class="attr">content</span>: <span class="string">&#x27;定位失败,请重新切换网络,再尝试&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">const</span> main = plus.<span class="property">android</span>.<span class="title function_">runtimeMainActivity</span>();</span><br><span class="line">              <span class="keyword">const</span> <span class="title class_">Intent</span> = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.content.Intent&#x27;</span>);</span><br><span class="line">              <span class="keyword">const</span> <span class="title class_">Settings</span> = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.provider.Settings&#x27;</span>);</span><br><span class="line">              <span class="keyword">const</span> new_Intent = <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="title class_">Settings</span>.<span class="property">ACTION_WIFI_SETTINGS</span>);</span><br><span class="line">              main.<span class="title function_">startActivity</span>(new_Intent);</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">            <span class="attr">content</span>: <span class="string">&#x27;定位失败，请打开手机定位服务权限&#x27;</span>,</span><br><span class="line">            <span class="attr">showCancel</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">const</span> main = plus.<span class="property">android</span>.<span class="title function_">runtimeMainActivity</span>();</span><br><span class="line">              <span class="keyword">const</span> <span class="title class_">Intent</span> = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.content.Intent&#x27;</span>);</span><br><span class="line">              <span class="keyword">const</span> <span class="title class_">Settings</span> = plus.<span class="property">android</span>.<span class="title function_">importClass</span>(<span class="string">&#x27;android.provider.Settings&#x27;</span>);</span><br><span class="line">              <span class="keyword">const</span> new_Intent = <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="title class_">Settings</span>.<span class="property">ACTION_LOCATION_SOURCE_SETTINGS</span>);</span><br><span class="line">              main.<span class="title function_">startActivity</span>(new_Intent);</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        uni.<span class="title function_">hideLoading</span>();</span><br><span class="line">        <span class="title function_">reject</span>(err);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><p>在需要的地方引用测试，运行时注意选择<code>自定义基座</code></p><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h92bvdr5wkj20os0enwnb.jpg" alt="hubilderX2"></p></li><li><p>运行到 APP 基座</p></li></ol><p><strong>😁😁 恭喜你完成了定位配置 (❁´◡&#96;❁)</strong></p><h1 id="PS-注意"><a href="#PS-注意" class="headerlink" title="PS 注意"></a>PS 注意</h1><ol><li>定位中的系统定位默认使用<code>wgs84</code>编码，实际使用中可能存在偏差。</li><li>使用高德地图使用<code>gcj02 </code>编码</li><li>打完基座之后，好像是可以标准基座运行。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniApp </tag>
            
            <tag> js </tag>
            
            <tag> 定位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniApp导入彩色iconFont</title>
      <link href="/2022/12/13/uniApp%E5%AF%BC%E5%85%A5%E5%BD%A9%E8%89%B2iconFont/"/>
      <url>/2022/12/13/uniApp%E5%AF%BC%E5%85%A5%E5%BD%A9%E8%89%B2iconFont/</url>
      
        <content type="html"><![CDATA[<h1 id="建立-iconFont-仓库"><a href="#建立-iconFont-仓库" class="headerlink" title="建立 iconFont 仓库"></a>建立 iconFont 仓库</h1><ol><li>登录<a href="https://www.iconfont.cn/">iconfont 官网</a>，如果需要注册请先注册</li><li>资源管理 -&gt; 我的项目 -&gt; 新建项目</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h9ko89p9r3j20zz0kpjz5.jpg" alt="QQ截图20221229143602.png"></p><ol start="3"><li>选择适合需要的 icon 添加到项目中</li><li>下载至本地</li></ol><h1 id="在文件中操作"><a href="#在文件中操作" class="headerlink" title="在文件中操作"></a>在文件中操作</h1><ol><li>解压下载的 zpi，进入下载文件夹中</li><li>在文件夹空白的地方右键-&gt; 在终端中打开</li><li><strong>输入命令</strong></li></ol><blockquote><p>npm install -g iconfont-tools</p></blockquote><ol start="4"><li>等待以上命令运行完成，在执行</li></ol><blockquote><p>iconfont-tools</p></blockquote><ol start="5"><li>控制终端会让填入文件夹名称等设置，可以一直回车直至结束</li><li>完成之后，文件夹中会多出一个文件夹，进入文件夹</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h9koq4mwavj20ng0d0jvy.jpg" alt="QQ截图20221229145409.png"></p><ol start="7"><li>找到<code>iconfont-weapp-icon.css</code>文件</li></ol><h1 id="导入项目中"><a href="#导入项目中" class="headerlink" title="导入项目中"></a>导入项目中</h1><ol><li>在项目中找一个放置 iconfont 文件的位置</li><li>我存放位置在 static 文件夹下</li><li>将<code>iconfont-weapp-icon.css</code>文件复制进去，当然 iconFont 下载下来的文件也需要导入即：</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h9kount8ckj20m70cfgq2.jpg" alt="QQ截图20221229145835.png"></p><ol start="4"><li>最后呈现的文件夹下内容有</li></ol><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h9kovfkspuj20bz08s75m.jpg" alt="QQ截图20221229145921.png"></p><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><p><strong>千万别忘记，在 app.vue 文件中导入样式哦~</strong></p><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h9kox6ekoij20jj02ywga.jpg" alt="QQ截图20221229150106.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniApp </tag>
            
            <tag> iconfont </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vsCode</title>
      <link href="/2022/11/29/vsCode/"/>
      <url>/2022/11/29/vsCode/</url>
      
        <content type="html"><![CDATA[<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h2><blockquote><p>JavaScript (ES6) code snippets &#x2F;&#x2F; es6 代码检查<br>Quokka.js &#x2F;&#x2F; 快速计算</p><p>ES7+ React&#x2F;Redux&#x2F;React-Native snippet</p><p>JavaScript Code Snippet</p><p>JS JSX Snippets</p></blockquote><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><blockquote><p>auto close tag &#x2F;&#x2F; 自动闭合</p><p>Auto Rename Tag &#x2F;&#x2F; 标签名称</p><p>HTML CSS Support</p><p>Live Server &#x2F;&#x2F; html 本地运行</p><p>open in browser &#x2F;&#x2F; 同上类似</p></blockquote><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><blockquote><p>color-highlight &#x2F;&#x2F; 输入色值展示颜色</p><p>Sass&#x2F;Less&#x2F;Scss&#x2F;Typescript&#x2F;Javascript&#x2F;Jade&#x2F;Pug Compile Hero Pro &#x2F;&#x2F; 生成 css&#x2F;js</p><p>Less IntelliSense &#x2F;&#x2F; less 变量与混合提示</p></blockquote><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><blockquote><p>beautify &#x2F;&#x2F; 代码格式化</p><p>Prettier - Code formatter &#x2F;&#x2F; 格代码格式化</p><p>Trailing Spaces &#x2F;&#x2F;去除多余空格</p></blockquote><h2 id="GIT-x2F-NPM"><a href="#GIT-x2F-NPM" class="headerlink" title="GIT &#x2F; NPM"></a>GIT &#x2F; NPM</h2><blockquote><p>Git Graph</p><p>GitLens</p><p>npm</p></blockquote><h2 id="框架提示"><a href="#框架提示" class="headerlink" title="框架提示"></a>框架提示</h2><blockquote><p>Vetur &#x2F;&#x2F;vue 高亮</p><p>Vue 2 Snippets</p><p>VueHelper &#x2F;&#x2F; Vue2 代码段（包括 Vue2 api、vue-router2、vuex2）</p><p>Ant Design Vue helper</p><p>uni-app-snippets</p><p>TypeScript Vue Plugin (Volar)</p><p>Vant Snippets</p><p>Vue 3 Snippets</p><p>Vue Language Features (Volar)</p><p>wechat-snippet</p><p>WindiCSS IntelliSense &#x2F;&#x2F; tailwindcss</p></blockquote><h2 id="增强开发"><a href="#增强开发" class="headerlink" title="增强开发"></a>增强开发</h2><blockquote><p>Bracket Pair Colorizer &#x2F;&#x2F;括号颜色</p><p>Chinese (Simplified) Language Pack for Visual Studio Code &#x2F;&#x2F; vscode 中文插件</p><p>koroFileHeader &#x2F;&#x2F;文件&#x2F;函数头部注释</p><p>Todo Tree &#x2F;&#x2F; todotree</p><p>Hopscotch &#x2F;&#x2F;代码颜色关键字词的颜色不同</p><p>Import Cost &#x2F;&#x2F; 导入包的大小</p><p>Path Intellisense &#x2F;&#x2F; 地址提示</p><p>px to rem &amp; rpx (cssrem) &#x2F;&#x2F; px 转 rem</p><p>Indenticator &#x2F;&#x2F; 缩进高亮</p><p>Package Json Upgrade &#x2F;&#x2F; 更新最新包</p><p>Code Spell Checker &#x2F;&#x2F; 单词检查</p><p>javascript console utils &#x2F;&#x2F; 快捷 console</p><p>GitHub Copilot &#x2F;&#x2F; AI 机器人(收费)</p><p>Project Manager &#x2F;&#x2F; 多个项目管理</p></blockquote><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><blockquote><p>Material Icon Theme &#x2F;&#x2F; 图标</p><p>Monokai Pro &#x2F;&#x2F;主题</p><p>Power Mode&#x2F;&#x2F;输入爆炸效果</p><p>Colorful Comments &#x2F;&#x2F;彩色的注释</p><p>Windows opacity &#x2F;&#x2F; 窗口透明</p></blockquote><h2 id="摸🐟"><a href="#摸🐟" class="headerlink" title="摸🐟"></a>摸🐟</h2><blockquote><p>NBA real-time score &#x2F;&#x2F; 看nba比赛必备</p><p>z-reader &#x2F;&#x2F; 看小说</p><p>daily-anime &#x2F;&#x2F; 每天更新番剧时间</p><p>Random Something &#x2F;&#x2F; 随机产生新闻、人名等…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编译器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译器 </tag>
            
            <tag> 开发工具 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端面试题收集</title>
      <link href="/2022/11/29/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%94%B6%E9%9B%86/"/>
      <url>/2022/11/29/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><ol><li>什么是事件循环</li><li>什么是原型链</li><li>async&#x2F;await 原理</li><li>深拷贝和浅拷贝(也会问到JSON.stringify JSON.parse这种方案的弊端)</li><li>箭头函数和普通函数有什么区别</li><li>map &amp; set 区别、实现原理</li><li>实现一个call&#x2F;bind(call,apply,bind区别)</li><li>什么是yield</li><li>Object.defineProperties都有那些参数,以及参数解释</li><li>使用过requestAnimation么？做什么的？</li><li>编写原型链和js各种继承模式</li><li>如何遍历对象</li><li>搜索框输入需要注意的点（防抖）</li><li>原生实现inserAfter</li><li>事件委托应用场景，e.target和e.currentTarget区别</li><li>new过程都发生了什么</li><li>promise(基本上要求可以手写Promise.all方法,这个问的最多)</li><li>Null&#x2F;undefault区别</li><li>Ajax 实现</li><li>es5实现let const</li><li>什么是闭包</li></ol><h1 id="Css"><a href="#Css" class="headerlink" title="Css"></a>Css</h1><ol><li>响应式页面布局有哪些方式</li><li>chrome设置小于12px字体</li><li>什么是盒子模型</li><li>flex使用</li><li>grid使用</li><li>移动端实现1px</li></ol><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><ol><li>vue响应式原理</li><li>vue3解决什么问题</li><li>Vue 为什么不能检测数组和对象的变化,怎么处理(为什么通过索引操作数组不能触发响应式)</li><li>vue router原理</li><li>vue路由钩子</li><li>v-model实现原理</li><li>vue.nextTick</li><li>vue 和 react 在虚拟dom的diff上，做了哪些改进使得速度很快?</li><li>vue 和 react 里的key的作用是什么? 为什么不能用Index？用了会怎样? 如果不加key会怎样?</li><li>vue 双向绑定的原理是什么?</li><li>vue 的keep-alive的作用是什么？怎么实现的？如何刷新的?</li><li>vue 是怎么解析template的? template会变成什么?</li><li>如何解析指令? 模板变量? html标签</li><li>用过vue 的render吗? render和template有什么关系</li><li>vue中key的作用</li><li>vue计算函数</li></ol><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><ol><li>HTTP缓存，对应字段，cache-contron都有那些值</li><li>从输入url到看到页面经历的所有事情</li><li>https的过程</li><li>get 和 post 的区别</li><li>跨域如何解决</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 面试 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大屏设计</title>
      <link href="/2022/11/23/%E5%A4%A7%E5%B1%8F%E5%93%8D%E5%BA%94%E5%BC%8F/"/>
      <url>/2022/11/23/%E5%A4%A7%E5%B1%8F%E5%93%8D%E5%BA%94%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="less-x2F-scss"><a href="#less-x2F-scss" class="headerlink" title="less&#x2F;scss"></a>less&#x2F;scss</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$base_width</span>: <span class="number">1920</span>;</span><br><span class="line"><span class="variable">$base_fontSize</span>: <span class="number">192</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@function</span> rem(<span class="variable">$px</span>) &#123;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$px</span> / <span class="variable">$base_fontSize</span> * <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.big-screen</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: (<span class="variable">$base_width</span> / <span class="variable">$base_fontSize</span>) * <span class="number">1vw</span>;</span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1200px</span>) &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">120px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">1200px</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">768px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0b1b41</span>;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/7fa1293cly1h8fcxj5erkj20qc0jggq9.jpg"><br><a href="https://www.zhihu.com/question/29739332">引用</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 响应式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滚动条</title>
      <link href="/2022/11/22/%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/"/>
      <url>/2022/11/22/%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><p>::-webkit-scrollbar 滚动条整体部分，可以设置宽度啥的<br>::-webkit-scrollbar-button 滚动条两端的按钮<br>::-webkit-scrollbar-track 外层轨道<br>::-webkit-scrollbar-track-piece 内层滚动槽<br>::-webkit-scrollbar-thumb 滚动的滑块<br>::-webkit-scrollbar-corner 边角<br>::-webkit-resizer 定义右下角拖动块的样式</p><p>::-webkit-scrollbar { &#x2F;_ 1 <em>&#x2F; }<br>::-webkit-scrollbar-button { &#x2F;</em> 2 <em>&#x2F; }<br>::-webkit-scrollbar-track { &#x2F;</em> 3 <em>&#x2F; }<br>::-webkit-scrollbar-track-piece { &#x2F;</em> 4 <em>&#x2F; }<br>::-webkit-scrollbar-thumb { &#x2F;</em> 5 <em>&#x2F; }<br>::-webkit-scrollbar-corner { &#x2F;</em> 6 <em>&#x2F; }<br>::-webkit-resizer { &#x2F;</em> 7 _&#x2F; }</p><p>:horizontal  水平方向的滚动条<br>:vertical  垂直 方向的滚动条<br>:decrement  应用于按钮和内层轨道(track piece)。它用来指示按钮或者内层轨道是否会减小视窗的位置(比如，垂直滚动条的上面，水平滚动条的左边。)<br>:increment decrement 类似，用来指示按钮或内层轨道是否会增大视窗的位置(比如，垂直滚动条的下面和水平滚动条的右边。)<br>:start  伪类也应用于按钮和滑块。它用来定义对象是否放到滑块的前面。<br>:end  类似于 start 伪类，标识对象是否放到滑块的后面。<br>:double-button  该伪类以用于按钮和内层轨道。用于判断一个按钮是不是放在滚动条同一端的一对按钮中的一个。对于内层轨道来说，它表示内层轨道是否紧靠一对按钮。<br>:single-button  类似于 double-button 伪类。对按钮来说，它用于判断一个按钮是否自己独立的在滚动条的一段。对内层轨道来说，它表示内层轨道是否紧靠一个 single-button。<br>:no-button  用于内层轨道，表示内层轨道是否要滚动到滚动条的终端，比如，滚动条两端没有按钮的时候。<br>:corner-present  用于所有滚动条轨道，指示滚动条圆角是否显示。<br>:window-inactive  用于所有的滚动条轨道，指示应用滚动条的某个页面容器(元素)是否当前被激活。(在 webkit 最近的版本中，该伪类也可以用于::selection 伪元素。webkit 团队有计划扩展它并推动成为一个标准的伪类)</p><img class="inline-img" src="/%5Bhttps:/tva1.sinaimg.cn/large/7fa1293cly1h8ea5w4xiwj22yb1n5e6y.jpg%5D" style="height:[50]"/><p>*::-webkit-scrollbar { &#x2F;<em>滚动条整体样式</em>&#x2F; width: 8px;&#x2F;<em>定义纵向滚动条宽度</em>&#x2F; height: 8px;&#x2F;<em>定义横向滚动条高度</em>&#x2F; }<br>*::-webkit-scrollbar-thumb { &#x2F;<em>滚动条内部滑块</em>&#x2F; border-radius: 8px; background-color: hsla(220, 4%, 58%, 0.3); transition: background-color 0.3s; }<br>*::-webkit-scrollbar-thumb:hover { &#x2F;<em>鼠标悬停滚动条内部滑块</em>&#x2F; background: #bbb; }<br>*::-webkit-scrollbar-track { &#x2F;<em>滚动条内部轨道</em>&#x2F; background: #ededed; }</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 滚动条 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
